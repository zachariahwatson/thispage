drop policy "Profiles are visible to every authenticated user." on "public"."profiles";

drop policy "Users can update their own profile" on "public"."profiles";

create table "public"."member_roles" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "member_id" bigint not null,
    "role" role[] not null default '{MEMBER}'::role[]
);


alter table "public"."member_roles" enable row level security;

alter table "public"."members" drop column "role";

CREATE UNIQUE INDEX member_roles_pkey ON public.member_roles USING btree (id);

alter table "public"."member_roles" add constraint "member_roles_pkey" PRIMARY KEY using index "member_roles_pkey";

alter table "public"."member_roles" add constraint "member_roles_member_id_fkey" FOREIGN KEY (member_id) REFERENCES members(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."member_roles" validate constraint "member_roles_member_id_fkey";

grant delete on table "public"."member_roles" to "anon";

grant insert on table "public"."member_roles" to "anon";

grant references on table "public"."member_roles" to "anon";

grant select on table "public"."member_roles" to "anon";

grant trigger on table "public"."member_roles" to "anon";

grant truncate on table "public"."member_roles" to "anon";

grant update on table "public"."member_roles" to "anon";

grant delete on table "public"."member_roles" to "authenticated";

grant insert on table "public"."member_roles" to "authenticated";

grant references on table "public"."member_roles" to "authenticated";

grant select on table "public"."member_roles" to "authenticated";

grant trigger on table "public"."member_roles" to "authenticated";

grant truncate on table "public"."member_roles" to "authenticated";

grant update on table "public"."member_roles" to "authenticated";

grant delete on table "public"."member_roles" to "service_role";

grant insert on table "public"."member_roles" to "service_role";

grant references on table "public"."member_roles" to "service_role";

grant select on table "public"."member_roles" to "service_role";

grant trigger on table "public"."member_roles" to "service_role";

grant truncate on table "public"."member_roles" to "service_role";

grant update on table "public"."member_roles" to "service_role";


